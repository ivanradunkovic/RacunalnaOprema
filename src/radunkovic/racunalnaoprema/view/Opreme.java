/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package radunkovic.racunalnaoprema.view;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Locale;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import radunkovic.racunalnaoprema.controller.ObradaOprema;
import radunkovic.racunalnaoprema.model.Korisnik;
import radunkovic.racunalnaoprema.model.Oprema;
import radunkovic.racunalnaoprema.pomocno.RacunalnaOpremaException;

/**
 *
 * @author Ivan
 */
public class Opreme extends javax.swing.JFrame {
    
    private ObradaOprema obradaOprema;
    private DecimalFormat format;
    /**
     * Creates new form Opreme
     */
    public Opreme() {
        initComponents();
        obradaOprema = new ObradaOprema();
        dpDatum.setLocale(new Locale("hr", "HR"));
        dpDatum.getSettings().setTranslationToday("Danas");
        dpDatum.getSettings().setTranslationClear("Poništi");
        dpDatum.getSettings().setFormatForDatesCommonEra("dd. MMMM yyyy.");
        dpDatum.getSettings().setFormatForDatesBeforeCommonEra("dd. MMMM uuuu.");
        
        NumberFormat nf = NumberFormat.getInstance(
                new Locale("hr")
        );
        format = (DecimalFormat) nf;
        format.applyPattern("#,###.00");
        ucitajOpreme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstOpreme = new javax.swing.JList<>();
        chbLimitator = new javax.swing.JCheckBox();
        txtUvjet = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMacAdresa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCijena = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dpDatum = new com.github.lgooddatepicker.components.DatePicker();
        btnOcisti = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Opreme");

        lstOpreme.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOpremeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstOpreme);

        chbLimitator.setSelected(true);
        chbLimitator.setText("Limitiraj na 50 rezultata");
        chbLimitator.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUvjetKeyReleased(evt);
            }
        });

        jLabel1.setText("Naziv");
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jLabel2.setText("macAdresa");
        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        txtMacAdresa.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel3.setText("Cijena");
        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        txtCijena.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel4.setText("Datum kupnje");
        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        btnOcisti.setText("Očisti");
        btnOcisti.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnOcisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOcistiActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chbLimitator))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnOcisti, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnDodaj)
                            .addGap(18, 18, 18)
                            .addComponent(btnPromjeni)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnObrisi)))
                    .addComponent(jLabel2)
                    .addComponent(dpDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCijena, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMacAdresa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                        .addComponent(txtNaziv, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(32, 32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbLimitator))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtMacAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtCijena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4)
                        .addGap(27, 27, 27)
                        .addComponent(dpDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPromjeni)
                            .addComponent(btnObrisi)
                            .addComponent(btnDodaj))
                        .addGap(29, 29, 29)
                        .addComponent(btnOcisti)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstOpremeValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOpremeValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        Oprema entitet = lstOpreme.getSelectedValue();
        if (entitet == null) {
            return;
        }

        txtNaziv.setText(entitet.getNaziv());
        txtMacAdresa.setText(entitet.getMacadresa());
        
        try {
            txtCijena.setText(format.format(entitet.getCijena()));
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        if (entitet.getGodinaKupnje()!= null) {
            java.util.Date dt = new java.util.Date(entitet.getGodinaKupnje().getTime());
            LocalDate d = dt.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            
            dpDatum.setDate(d);
        }
        
        
    }//GEN-LAST:event_lstOpremeValueChanged

    private void txtUvjetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyReleased
        //if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ucitajEntitete();
            // }
    }//GEN-LAST:event_txtUvjetKeyReleased

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        Oprema entitet = lstOpreme.getSelectedValue();

        if (entitet == null) {
            JOptionPane.showConfirmDialog(null, "Prvo odaberite opremu");
        }

        preuzmiVrijednosti(entitet);

        try {
            obradaOprema.spremi(entitet);
        } catch (RacunalnaOpremaException e) {
            JOptionPane.showConfirmDialog(null, e.getMessage());
            return;
        }

        ucitajEntitete();

        
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        Oprema entitet = lstOpreme.getSelectedValue();

        if (entitet == null) {
            JOptionPane.showConfirmDialog(null, "Prvo odaberite opremu");
        }

        try {
            obradaOprema.obrisi(entitet);
            ucitajEntitete();
            ocistiPolja();
        } catch (RacunalnaOpremaException ex) {
            JOptionPane.showMessageDialog(null, "Ne mogu obrisati opremu");
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnOcistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOcistiActionPerformed
        ocistiPolja();
    }//GEN-LAST:event_btnOcistiActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Oprema entitet = new Oprema();

        preuzmiVrijednosti(entitet);

        try {
            obradaOprema.spremi(entitet);
        } catch (RacunalnaOpremaException e) {
            JOptionPane.showConfirmDialog(null, e.getMessage());
            return;
        }

        ucitajEntitete();

        ocistiPolja();
    }//GEN-LAST:event_btnDodajActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOcisti;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JCheckBox chbLimitator;
    private com.github.lgooddatepicker.components.DatePicker dpDatum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Oprema> lstOpreme;
    private javax.swing.JTextField txtCijena;
    private javax.swing.JTextField txtMacAdresa;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables

    private void ocistiPolja() {
        txtNaziv.setText("");
        txtMacAdresa.setText("");
        txtCijena.setText("");
        dpDatum.setDate(null);
    }

    private void preuzmiVrijednosti(Oprema entitet) {
        entitet.setNaziv(txtNaziv.getText());
        entitet.setMacadresa(txtMacAdresa.getText());
        try {
            entitet.setCijena(
                    new BigDecimal(
                            format.parse(txtCijena.getText()).floatValue()
                    )
            );
        } catch (Exception e) {
           entitet.setCijena(BigDecimal.ZERO);
           txtCijena.setText("0");
        }
        
        try {
            
            java.util.Date date = java.util.Date.from(dpDatum.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant());
            entitet.setGodinaKupnje(date);
            
        } catch (Exception e) {
            entitet.setGodinaKupnje(null);
        }
        
        
    }

    private void ucitajEntitete() {
        if (chbLimitator.isSelected()) {
            DefaultListModel<Oprema> m = new DefaultListModel<>();
            for (Oprema k : obradaOprema.getLista(txtUvjet.getText().trim(), chbLimitator.isSelected())) {
                m.addElement(k);
            }
            lstOpreme.setModel(m);
        } else {
            DefaultListModel<Oprema> m = new DefaultListModel<>();
            Oprema o = new Oprema();
            o.setNaziv("Molim");
            o.setMacadresa("pričekati");
            m.addElement(o);
            lstOpreme.setModel(m);
            DuzeUcitanjeEntiteta d = new DuzeUcitanjeEntiteta();
            d.start();
        }
    }
    
    private class DuzeUcitanjeEntiteta extends Thread {

        @Override
        public void run() {
            DefaultListModel<Oprema> m = new DefaultListModel<>();
            for (Oprema k : obradaOprema.getLista(txtUvjet.getText().trim(), chbLimitator.isSelected())) {
                m.addElement(k);
            }
            lstOpreme.setModel(m);
        }

    }
    
    private void ucitajOpreme() {
        DefaultListModel<Oprema> k = new DefaultListModel<>();
        for (Oprema m : obradaOprema.getLista()) {
            k.addElement(m);
        }
        lstOpreme.setModel(k);
    }
}
